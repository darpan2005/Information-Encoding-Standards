@page
@model ContactManager.Pages.Contacts.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<!-- Page Title -->
<h1>Details</h1>

<!-- Contact Information Section -->
<div>
    <h4>Contact</h4>
    <hr />
    <dl class="row">
        <!-- Displaying various properties of the Contact model -->
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Contact.Name)
        </dd>
        <!-- ... Repeat similar blocks for other properties like Address, City, State, Zip, Email, and Status -->
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Contact.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.Status)
        </dd>
    </dl>
</div>

<!-- Approval/Rejection Forms -->
@if (Model.Contact.Status != ContactStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Contact, ContactOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <!-- Hidden fields for contact id and status -->
            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
            <input type="hidden" name="status" value="@ContactStatus.Approved" />
            <!-- Approve button -->
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.Contact.Status != ContactStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Contact, ContactOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <!-- Hidden fields for contact id and status -->
            <input type="hidden" name="id" value="@Model.Contact.ContactId" />
            <input type="hidden" name="status" value="@ContactStatus.Rejected" />
            <!-- Reject button -->
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<!-- Navigation Links -->
<div>
    <!-- Edit link with authorization check -->
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Contact,
    ContactOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Contact.ContactId">Edit</a>
        <text> | </text>
    }
    <!-- Back to List link -->
    <a asp-page="./Index">Back to List</a>
</div>
